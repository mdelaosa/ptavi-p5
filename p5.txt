Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
	Tiene un total de 954 paquetes.
* ¿Cuánto tiempo dura la captura?
	Tiene una duración de 56.149345 segundos.
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
	Se captura en la IP 192.168.1.34 y se trata de una IP privada,
puesto que se encuentra dentro del rango de IP privadas.

3. Antes de analizar las tramas, mira las estadı́sticas generales que
aparecen en el menú de Statistics. En el apartado de jerarquı́a de
protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
	UDP es mayor, tiene un 96.2%, frente a un 2.1% de TCP. Tiene
sentido, puesto que TCP requiere establecimiento previo, asentimientos
y control de flujo constante, por lo que al hablar de una conexión en
tiempo real, es mejor UDP.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
	DNS, TCP, HTTP, SIP, RTP, RTCP, ARP, ICMP, UDP, STUN.
Son señal: RTP, UDP, SIP.
Son ruido: ARP, TCP, 

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
	En los segundos 7, 14, 16, 38, 55.
* Y los paquetes con RTP, ¿cuándo se envı́an?
	Durante los segundos comprendidos entre el 17 y el 38.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
	Son paquetes DNS.
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
	80.58.61.250
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
	86.58.61.250

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
	ekiga.net/ip
* ¿Qué user agent (UA) la está pidiendo?
	192.168.1.34
* ¿Qué devuelve el servidor?
	200 OK
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
	Responde una dirección IP pública, por la cual el servidor
ve al cliente.

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
	Porque STUN se utiliza para encontrar la IP pública de un
cliente privado a través de NAT.
* ¿Podrı́as decir si estamos tras un NAT o no?
	Si, ya que usa el protocolo STUN.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet,
lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
	86.64.162.35
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
	5060
* ¿Qué método SIP utiliza el UA para registrarse?
	REGISTER.
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
	INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
	No.
* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
	Porque recibimos un error de autenticazión (401).
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
	Vemos que en el primer REGISTER, el frame length es de 523 bytes,
y en el segundo, el frame length es de 712 bytes. Este último es mayor,
porque añade la autorización para que el registro sea posible.
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
	3600s.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
	From: 'Gregorio Robles' <sip: grex@ekiga.net>
	83.36.48.212
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
	El cuerpo de la trama contiene el protocolo que se utiliza, SDP.
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
	No, ya que hay un error 407.
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
	El tamaño es mayor, porque contiene el campo de identificación del
proxy, que el primero no tenía y por eso recibía como respuesta un 407
y no un 200 OK.

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
	RTP y RTCP. El primero, RTP, es el protocolo básico para el 
transporte de tráfico multimedia a tiempo real en Internet, y RTCP da
información de control sobre cómo es la calidad de la transmisión.
* ¿Cuál es el tamaño de paquete de los mismos?
	241 bytes para RTP (paquetes de audio) y 102 bytes para RTCP.
* ¿Se utilizan bits de padding?
	No, ya que el campo aparece como False.
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
	RTP tiene una periodicidad de 0.02s aprox.
* ¿Cuántos bits/segundo se envı́an?
	8000 bytes/s, que es 64Kbps.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
	Uno de audio y uno de vídeo.
* ¿Cuántos paquetes se pierden?
	Ninguno, ya que el campo Lost tiene 0.0%
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
	El valor de delta corresponde al tiempo que tarda en llegar
un paquete, los valores son 1290.44 y 1290.48.
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
	Para audio, el jitter max es 119.635 y mean 42.500.
	Para vídeo, el jitter max es 183.096 y mean 153.240.
	El jitter es como se mide la transmisión de los paquetes, por
los valores que tenemos, se trata de una conexión de calidad, a mayor
jitter, peor calidad.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
	Ambos son 0.0
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
	Si, ya que los valores de jitter y delta comienzan a partir
de ese punto.
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
	Hasta el paquete 246. Tras este, son mayores.
* ¿A qué se debe el cambio tan brusco del jitter?
	Se debe a que aumenta el valor de delta.
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
	Si, ya que el jitter depende de delta.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?
	Desde el segundo 14.426793 hasta el 39.229683, es decir, 24.80289s.
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
	H.261, que es de vídeo, 0x43306582
	G.711, que es de audio,	0x3209362743
	Hay varios porque tenemos dos flujos, uno de audio y otro de vídeo.
No hay CSRCs, porque el campo Contributing está a cero.

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
	Método BYE
* ¿En qué trama(s)?
	En las tramas 924, 925, 927 y 933.
* ¿Por qué crees que se envı́a varias veces?
	Porque estamos en UDP, que al ser un protocolo no fiable, es
necesario que los mensajes se manden varias veces para asegurarse que
ha llegado.

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
	Porque para cerrar sesión, se envía el campo Expires 0.
* ¿En qué trama sucede esto?
	950
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad
(al principio de la sesión)?
	En lo nombrado anteriormente, el campo Expires pasa a valer 0
en vez de 3600s.
	
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

---Captura de una sesión SIP---

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP
sip:500@ekigan.net. Recuerda que has de comenzar a capturar tramas
antes de arrancar Ekiga para ver todo el proceso.

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4:
* ¿Se utilizan DNS y STUN? ¿Por qué?
	
* ¿Son diferentes el registro y la descripción de la sesión?
	
20. Identifica las diferencias existentes entre esta conversación y
la conversación anterior:
* ¿Cuántos flujos tenemos?
	
* ¿Cuál es su periodicidad?
	
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
	
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
	
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de
que lo has hecho bien. Deberás añadirlo al repositorio.
	
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

